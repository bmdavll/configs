#!/bin/bash
#2010-07-24
#2011-04-05
#2011-04-17

# top-level folders to exclude
EXCLUDE='launchers|misc|setup|windows'

IFS=$'\n'

exec >&2
declare -i code=0

# dry run
[ "$1" = "-n" ] && nflag=1

echodo() {
	echo "$1" "$2"$'\t'"${3/#$HOME/~}" "${4/#$HOME/~}"
	if [ ! "$nflag" ]; then
		"$@"
	fi
}

recurse() {
	local wd="$PWD" file target

	for file in *
	do
		if [[ -z "$1" && "$file" =~ ^("$this"|$EXCLUDE)$ ]]; then
			continue
		fi
		target="${1:-$HOME/.}$file"

		if [[ "$file" =~ [*?$] ]]
		then
			glob=$(ls -d $target 2>/dev/null)
			if [[ $? -ne 0 || ! -e "$glob" ]]; then
				echo "No match: $target"
				code+=1
				continue
			else
				target="$glob"
			fi
		fi

		if [ -h "$target" ]
		then
			# silently re-link matching or non-existent symlinks
			if   [[ -d "$file" && -d "$target" ]]
			then
				echodo ln -sfT "$wd/$file" "$target"

			elif [[ -f "$file" && -f "$target" || ! -e "$target" ]]
			then
				echodo ln -sf  "$wd/$file" "$target"
			else
				! echo "File-directory mismatch: $target"
			fi

		elif [ -d "$target" ]
		then
			# recurse if directory
			if [ -d "$file" ]
			then
				if ! cd "$file"; then
					false
				else
					# descend a level
					recurse "$target/"
					cd "$wd"
				fi
			else
				! echo "File-directory mismatch: $target"
			fi

		elif [ -e "$target" ]
		then
			# replace existing file?
			ls -lh "$target" >&2
			echo -n "Remove and link? [y/N] " >&2 && read
			if [[ "$REPLY" == [Yy]* ]]; then
				echodo ln -sf "$wd/$file" "$target"
			else
				continue
			fi

		else
			# new link
			if [ -d "$wd/$file" ]; then
				echo -n "Create directory link $target? [y/N] " >&2 && read
				if [[ "$REPLY" != [Yy]* ]]; then
					continue
				fi
			fi
			echodo ln -s "$wd/$file" "$target"
		fi

		if [ $? -ne 0 ]; then
			code+=1
		fi
	done
}

path=$(readlink -e -- "$(which "$0")")
this=$(basename -- "$path")

cd "${path%$this}"

recurse

exit $code

